/* @define Wheel */

@import "../base/global";

.Wheel {
  width: 100vw;
  --part-progress: var(--inview);
}

.Wheel.has-fallback {
  position: relative;
  margin: calc(var(--space) * 2) 0;
}

.Wheel-list {
  display: flex;
  flex-wrap: wrap;
  margin: calc(var(--space) * 4) calc(var(--space) * -3);
  padding: 0;
  padding-left: calc(var(--space) * 4);
  padding-right: calc(var(--space) * 4);
}

.Wheel-item {
  list-style: none;
  border: solid transparent;
  border-width: 0 calc(var(--space) * 3);
  margin-top: calc(var(--space) * 12)
}

@media (min-width: 600px) {
  .Wheel-item {
    flex: 0 0 50%;
  }
}

@media (min-width: 1400px) {
  .Wheel-item {
    flex: 0 0 20%;
  }
}

.Wheel-title {
  border-bottom: 2px solid #fff;
  margin-bottom: 16px;
  font-size: 42px;
  font-family: var(--giorgio-sans-bold);
  line-height: var(--giorgio-sans-bold-line-height);
  letter-spacing: var(--giorgio-sans-bold-letter-spacing);
}

.Wheel-number {
  color: #fff;
}

.Wheel-text {
  font-size: var(--font-size-sm);
}

@media (min-width: 1400px) {
  .Wheel-text {
    font-size: var(--font-size-xs);
  }
}

.Wheel-container {
  display: none;
  width: 100vw;
  height: 100vh;
  position: relative;
  position: sticky;
  top: 0;
  left: 0;
  overflow: hidden;
}

.Wheel.is-sticky .Wheel-container {
  position: fixed;
}

.Wheel.is-bottom .Wheel-container {
  position: absolute;
  top: auto;
  bottom: 0;
}

.Wheel-graphic {
  height: 94%;
  width: auto;
  position: absolute;
  top: 0;
  left: 0;
  transform-origin: 50% 50%;
  transform: scale(1.3) translate(10%, -6%) rotate(calc(-1deg * ((360 * var(--progress)) - 72)));
}

.Wheel.is-lowperf .Wheel-graphic,
.Wheel.has-fallback .Wheel-graphic {
  will-change: transform;
}

:root.has-js .Wheel {
  height: calc(100vh * 6);
}

:root.has-js .Wheel-list {
  display: none;
}

:root.has-js .Wheel-container {
  display: block;
}

:root.has-js .Wheel-graphic {
  transform: scale(1.8) translate(-46%, 0) rotate(calc(-1deg * ((360 * var(--progress)) - 72)));
}

:root.has-js .Wheel-text {
  font-size: 18px;
  opacity: var(--part-progress);
  transform: translateY(calc(var(--part-progress) * var(--part-inview) * 10vh));
}

@media (min-width: 600px) {
  :root.has-js .Wheel-text {
    font-size: 14px;
  }
}

.Wheel.is-lowperf .Wheel-text,
.Wheel.has-fallback .Wheel-text {
  will-change: transform, opacity;
}

@media (min-width: 120vh) {
  :root.has-js .Wheel:not(.has-fallback) {
    padding-top: 20vh;
  }

  :root.has-js .Wheel-graphic {
    transform: scale(3) translate(-31%, 1%) rotate(calc(-1deg * ((360 * var(--progress)) - 72)));
  }
}
